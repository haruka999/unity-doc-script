<signature>
ScaleSlider(float,Vector3,Vector3,Quaternion,float,float)
</signature>
{img ScaleSliderHandle.png}\\
ドラッグ可能なスケールスライダーを作成します
スケール方向は正または負のみに限定されます
戻り値としてスケール値を返します


BEGIN EX
	// Increase/decrease a value just by moving the Scale slider Handle


	@CustomEditor (FreeScale)
	class FreeScaleHandleJS extends Editor {
		function OnSceneGUI () {
	        target.val = Handles.ScaleSlider(target.val, 
	        				target.transform.position, 
	        				Vector3.up, 
	        				Quaternion.identity, 
	        				5, 
	        				HandleUtility.GetHandleSize(target.transform.position));
	        if (GUI.changed)
	            EditorUtility.SetDirty (target);
	    }
	}
END EX
And the script attached to this handle:
BEGIN EX
	// FreeScale.js
	@script ExecuteInEditMode()

	var val : float = 1;

	function Update () {
		Debug.Log("Value tied to the slider: " + val);
	}
END EX
@param scale 現在のスケール
@param position ハンドルの位置
@param direction ハンドルの方向
@param rotation ハンドルの角度
@param size ハンドル自体の大きさ。scaleとは異なります
@param snap スナップの増分

__Note:__ Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.
