<signature>
Popup(Rect,int,string[])
Popup(Rect,int,GUIContent[])
Popup(Rect,string,int,string[])
Popup(Rect,GUIContent,int,GUIContent[])
Popup(Rect,int,string[],GUIStyle)
Popup(Rect,int,GUIContent[],GUIStyle)
Popup(Rect,string,int,string[],GUIStyle)
Popup(Rect,GUIContent,int,GUIContent[],GUIStyle)
</signature>
{img EditorGUIPopup.png}\\
ポップアップで表示されるセレクトボックスを作成します
BEGIN EX
	// Adds a component to the selected GameObjects

	class EditorGUIPopup extends EditorWindow {
		var options : String[] = ["Rigidbody", "Box Collider", "Sphere Collider"];
		var index : int = 0;
		
		@MenuItem("Examples/Editor GUI Popup usage")
		static function Init() {
			var window = GetWindow(EditorGUIPopup);
			window.position = Rect(0,0,180,80);
			window.Show();
		}
		function OnGUI() {
			index = EditorGUI.Popup(
				Rect(0,0,position.width, 20),
				"Component:",
				index, 
				options);
				
			if(GUI.Button(Rect(0,25,position.width, position.height - 26),"Add Component"))
				AddComponentToObjects();
		}
		function AddComponentToObjects() {
			if(!Selection.activeGameObject) {
				Debug.LogError("Please select at least one GameObject first");
				return;
			}
			for(var go : GameObject in Selection.gameObjects)
				go.AddComponent(options[index]);
		}
	}
END EX
@param position 表示位置
@param label 左側に表示する文字列、テクスチャ、ツールチップ
@param selectedIndex 選択されたインデックス
@param displayedOptions ポップアップで表示される文字列、画像、ツールチップ
@param style スタイル
@return The index of the option that has been selected by the user.
