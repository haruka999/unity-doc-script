<signature>
SaveScene()
SaveScene(string)
SaveScene(string,bool)
</signature>
シーンを保存します
pathを指定しない場合は現在開いているシーンを上書き保存します
シーンの保存に失敗した時、戻り値としてfalseを返します
戻り値としてfalseを返す時は、現在のシーンを保存するときのダイアログでキャンセルを行った時です

SA: ::ref::currentScene.

{img SimpleAutoSave.png}\\
''Simple Editor Window that saves each 300 seconds the current scene.''
BEGIN EX
	// Simple editor window that autosaves the working scene
	// Make sure to have this window opened to be able to execute the auto save.

	import UnityEditor;

	class SimpleAutoSave extends EditorWindow {
		
		var saveTime : float = 300;
		var nextSave : float = 0;

		@MenuItem("Example/Simple autoSave")
		static function Init() {
			var window : SimpleAutoSave = 
				EditorWindow.GetWindowWithRect(
					SimpleAutoSave, 
					Rect(0,0,165,40));
			window.Show();
		}
		function OnGUI() {
			 EditorGUILayout.LabelField("Save Each:", saveTime + " Secs");
			 var timeToSave : int = nextSave - EditorApplication.timeSinceStartup;
			 EditorGUILayout.LabelField("Next Save:", timeToSave.ToString() + " Sec");
			 this.Repaint();
			 
			if(EditorApplication.timeSinceStartup > nextSave) {
				var path : String [] = EditorApplication.currentScene.Split(char.Parse("/"));
				path[path.Length -1] = "AutoSave_" + path[path.Length-1];	
				EditorApplication.SaveScene(String.Join("/",path), true);
				Debug.Log("Saved Scene");
				nextSave = EditorApplication.timeSinceStartup + saveTime;
			}
		}
	}
END EX
@param path シーンの保存先、空文字の場合、現在開いているシーンに上書き保存されます
@param saveAsCopy 現在のシーンに変更点を適用する場合はtrueを設定します。デフォルトはtrueで適用しません
@return True if the save succeeded, otherwise false.
