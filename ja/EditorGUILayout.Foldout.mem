<signature>
Foldout(bool,string)
Foldout(bool,GUIContent)
Foldout(bool,string,GUIStyle)
Foldout(bool,GUIContent,GUIStyle)
</signature>
{img FoldoutUsage.png}\\
折りたたみ式のラベルを作成します
foldoutがtrueの場合、展開されます
BEGIN EX
	// Create a foldable menu that hides/shows the selected transform
	// position.
	// if no Transform is selected, the Foldout item will be folded until
	// a transform is selected.

	class FoldoutUsage extends EditorWindow {

		var showPosition : boolean = true;
		var status : String = "Select a GameObject";
		@MenuItem("Examples/Foldout Usage")
		static function Init() {
			var window = GetWindow(FoldoutUsage);
			window.Show();
		}
		
		function OnGUI() {
			showPosition = EditorGUILayout.Foldout(showPosition, status);
			if(showPosition)
				if(Selection.activeTransform) {
					Selection.activeTransform.position = 
						EditorGUILayout.Vector3Field("Position", Selection.activeTransform.position);
						status = Selection.activeTransform.name;
				}
			
			if(!Selection.activeTransform) {
				status = "Select a GameObject";
				showPosition = false;	
			}
		}
		function OnInspectorUpdate() {
			this.Repaint();
		}
	}
END EX
@param foldout タイトルバーの状態。trueの場合、展開されている状態です
@param content 表示する文字列
@param style スタイル
@return The foldout state selected by the user. If true, you should render sub-objects.
