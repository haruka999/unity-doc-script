インポートパイプラインにフックする時、アセットをインポートする時、スクリプトを再ビルドする時、などに使用されます
使用する時はAssetPostprocessorを継承したクラスを作成します
実際に使用する際にはスクリプトは必ず事前にビルドされたDLLを準備し、プロジェクト内に置いておくことをお勧めします
AssetPostprocessorはインポートされたアセットの出力を元に動作します
したがって、アセットのスクリプトにコンパイルエラーが検出された際にも、変更されたデータが出力されたと検出され、誤った動作をしてしまうことがあります
この誤った動作はパイプライン処理に重大な問題へと繋がる恐れがあります
AssetPostprocessor用のDLLを用意することで、スクリプト(Assembly-CSharp-Editorでコンパイルされるもの)がコンパイルエラーを出した場合でも、正常に動作が出来るようになります
