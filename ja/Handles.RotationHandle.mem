<signature>
RotationHandle(Quaternion,Vector3)
</signature>
オブジェクトを回転させるハンドルを作成します
これは標準のシーンビューで使用できるものと同じものになります
Undo.SetSnapshotTarget関数を使用したUndo操作もきちんと動作します
戻り値としてハンドルの角度を返します


{img RotationHandle.png}\\
BEGIN EX
	//Create a rotation handle at (0,0,0) and rotate any object that has "RotateAtPoint.js"
	// attached from 0,0,0.

	@CustomEditor (RotateAtPoint)
	class RotationHandleJS extends Editor {
		function OnSceneGUI () {
	        target.rot = Handles.RotationHandle (target.rot, Vector3.zero);
	        if (GUI.changed)
	            EditorUtility.SetDirty (target);
	    }
	}
END EX
And the script attached to this handle:
BEGIN EX
	// RotateAtPoint.js
	// This Script has to be outside of the editor folder.
	//
	// Usage: Just Place this script on the object you want to work the handle with.
	// And control the Object's rotation from the handle that appears at 0,0,0 when 
	// This object is selected.

	@script ExecuteInEditMode()
	var rot : Quaternion = Quaternion.identity;

	function Update () {
		transform.rotation = rot;
	}
END EX
@param rotation ハンドルの角度
@param position ハンドルの位置
@return The modified rotation

__Note:__ Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.
