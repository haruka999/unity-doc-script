<signature>
PositionHandle(Vector3,Quaternion)
</signature>
オブジェクト位置を移動させるハンドルを作成します
これは標準のシーンビューで使用できるものと同じものになります
Undo.SetSnapshotTarget関数を使用したUndo操作もきちんと動作します
ハンドルの向きを変えたい場合はHandles.matrixを使用します
戻り値としてハンドルの位置を返します

{img PositionHandle.png}\\
BEGIN EX
	//Create a position handle that always looks at "lookAtPoint" in LookAtPoint.js


	@CustomEditor (LookAtPoint)
	class PositionHandleJS extends Editor {
		function OnSceneGUI () {
		target.lookAtPoint = 
			Handles.PositionHandle (target.lookAtPoint, Quaternion.identity);
		if (GUI.changed)
			EditorUtility.SetDirty (target);
		}
	}
END EX
And the Script attached to this handle:
BEGIN EX
	// LookAtPoint.js
	// This Script has to be outside of the editor folder.
	//
	// Usage: Just Place this script on the object you want to work the handle with.

	@script ExecuteInEditMode()

	var lookAtPoint = Vector3.zero;

	function Update () {
	    transform.LookAt (lookAtPoint);
	}
END EX
@param position ハンドルの位置
@return The new position. If the user has not performed any operation, it will return the same value as you passed it in postion.

__Note:__ Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.
