<signature>
LookAt(Transform,Vector3)
</signature>
対象のTransformオブジェクトを設定し、その方向を向かせる
Then it rotates the transform to point its up direction vector in the direction hinted at by the /worldUp/ vector.
If you leave out the /worldUp/ parameter, the function will use the world y axis.
/worldUp/ is only a hint vector. The up vector of the rotation will only match the /worldUp/ vector if the forward direction is perpendicular to /worldUp/.
CONVERTEXAMPLE
BEGIN EX
	// This complete script can be attached to a camera to make it 
	// continuously point at another object.

	// The /target/ variable shows up as a property in the inspector. 
	// Drag another object onto it to make the camera look at it.
	var target : Transform; 

	// Rotate the camera every frame so it keeps looking at the target 
	function Update() {
		transform.LookAt(target);
	}
END EX
<signature>
LookAt(Vector3,Vector3)
</signature>
オブジェクトが指定した方向を向くようにする関数です。
Then it rotates the transform to point its up direction vector in the direction hinted at by the /worldUp/ vector.
If you leave out the /worldUp/ parameter, the function will use the world y axis.
/worldUp/ is only a hint vector. The up vector of the rotation will only match the /worldUp/ vector if the forward direction is perpendicular to /worldUp/.
CONVERTEXAMPLE
BEGIN EX
	// Point the object at the world origin
	transform.LookAt(Vector3.zero);
END EX